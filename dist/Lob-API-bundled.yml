openapi: 3.0.3
info:
  title: Lob API
  version: '2020-02-11'
  description: >
    The Lob API is organized around REST. Our API is designed to have
    predictable, resource-oriented URLs and uses HTTP response codes to indicate
    any API errors
  license:
    name: MIT
    url: 'https://mit-license.org/'
  contact:
    name: Lob Developer Experience
    url: 'https://support.lob.com/'
    email: lob-openapi@lob.com
  termsOfService: 'https://www.lob.com/legal'
servers:
  - url: 'https://api.lob.com/v1'
    description: production
tags:
  - name: Addresses
    description: A frictionless address book for use with the print and mail API.
  - name: Letters
    description: 'Easily print and mail letters. Create, retrieve, cancel, and list letters.'
  - name: Template_Versions
    description: Versioning for your reusable HTML print and mail templates.
  - name: Templates
    description: 'Versioned, reusable HTML Templates for use with the print and mail API.'
  - name: US Verifications
    description: >
      Validate, automatically correct, and standardize the addresses in your
      address book based on USPS's [Coding Accuracy Support System
      (CASS)](https://postalpro.usps.com/certifications/cass).
  - name: Zip Lookups
    description: >
      Find a list of cities, states and associated information about a US ZIP
      code.
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    adr_id:
      type: string
      description: Unique identifier prefixed with `adr_`.
      pattern: '^adr_[a-zA-Z0-9]+$'
    failure_status_code:
      type: integer
      enum:
        - 401
        - 403
        - 404
        - 413
        - 422
        - 429
        - 500
      description: |
        A conventional HTTP status code:
          * 401 - Authorization error with your API key or account
          * 403 - Forbidden error with your API key or account
          * 404 - The requested item does not exist
          * 413 - Payload too large
          * 422 - The query or body parameters did not pass validation
          * 429 - Too many requests have been sent with an API key in a given amount of time
          * 500 - An internal server error occurred, please contact support@lob.com
    error:
      type: object
      description: >-
        Lob uses RESTful HTTP response codes to indicate success or failure of
        an API request. In general, 2xx indicates success, 4xx indicate an input
        error, and 5xx indicates an error on Lob's end.
      required:
        - message
        - status_code
      properties:
        message:
          type: string
          description: A human-readable message with more details about the error
          example: >-
            Rate limit exceeded. Please wait 5 seconds and try your request
            again.
        status_code:
          $ref: '#/components/schemas/failure_status_code'
    resource_description:
      type: string
      description: >
        An internal description that identifies this resource. Must be no longer
        than 255 characters.
      maxLength: 255
      nullable: true
    send_date:
      type: string
      description: >-
        A timestamp in ISO 8601 format which specifies a date after the current
        time and up to 180 days in the future to send the letter off for
        production. Setting a send date overrides the default [cancellation
        window](https://docs.lob.com/#cancellation) applied to the mailpiece.
        Until the `send_date` has passed, the mailpiece can be canceled. If a
        date in the format `2017-11-01` is passed, it will evaluate to midnight
        UTC of that date (`2017-11-01T00:00:00.000Z`). If a datetime is passed,
        that exact time will be used. A `send_date` passed with no time zone
        will default to UTC, while a `send_date` passed with a time zone will be
        converted to UTC.
      format: date-time
    metadata:
      type: object
      description: >-
        Use metadata to store custom information for tagging and labeling back
        to your internal systems. Must be an object with up to 20 key-value
        pairs. Keys must be at most 40 characters and values must be at most 500
        characters. Neither can contain the characters `"` and `\`. Nested
        objects are not supported.
      properties: {}
      maxProperties: 20
      example:
        type: object
        properties:
          customer_id:
            type: string
            example: '987654'
          campaign:
            type: string
            example: NEWYORK2015
    address_editable_us:
      type: object
      required:
        - address_line1
        - address_city
        - address-state
        - address_zip
      oneOf:
        - required:
            - name
        - required:
            - company
      properties:
        description:
          $ref: '#/components/schemas/resource_description'
        name:
          type: string
          description: >
            Either `name` or `company` is required, you may also add both. Must
            be no longer than 40 characters. If both `name` and `company` are
            provided, they will be printed on two separate lines above the rest
            of the address.
          maxLength: 40
          nullable: true
          example: HARRY ZHANG
        company:
          type: string
          description: >
            Either `name` or `company` is required, you may also add both. Must
            be no longer than 40 characters. If both `name` and `company` are
            provided, they will be printed on two separate lines above the rest
            of the address. This field can be used for any secondary recipient
            information which is not part of the actual mailing address (Company
            Name, Department, Attention Line, etc).
          maxLength: 40
          nullable: true
          example: LOB
        phone:
          type: string
          description: Must be no longer than 40 characters.
          maxLength: 40
          nullable: true
          example: '5555555555'
        email:
          type: string
          description: Must be no longer than 100 characters.
          maxLength: 100
          nullable: true
          example: harry@lob.com
        address_line1:
          type: string
          description: >
            Must be no longer than 64 characters for US addresses or 200
            characters for international addresses.
          maxLength: 200
          example: 185 BERRY ST STE 6100
        address_line2:
          type: string
          description: >
            Must be no longer than 64 characters for US addresses or 200
            characters for international addresses.
          maxLength: 200
          nullable: true
          example: null
        address_city:
          type: string
          description: >
            Required if address_country is US, otherwise optional. Must be no
            longer than 200 characters.
          maxLength: 200
          nullable: true
          example: SAN FRANCISCO
        address_state:
          type: string
          description: >
            Required as a 2 letter state short-name code if `address_country` is
            `US`, otherwise optional and no longer than 200 characters.
          maxLength: 2
          pattern: '^[a-zA-Z]{2}$'
          nullable: true
          example: CA
        address_zip:
          type: string
          description: >
            Required and must follow the ZIP format of `12345` or ZIP+4 format
            of `12345-1234` if `address_country` is `US`, otherwise optional and
            not any longer than 40 characters.
          oneOf:
            - pattern: '^[0-9]{5}$'
            - pattern: '^[0-9]{5}-[0-9]{4}$'
          nullable: true
          example: 94107-1741
        address_country:
          type: string
          description: >
            Must be a 2 letter country short-name code (ISO 3166). Defaults to
            `US`.
          minLength: 2
          example: US
        send_date:
          $ref: '#/components/schemas/send_date'
        metadata:
          $ref: '#/components/schemas/metadata'
    address_editable_intl:
      type: object
      required:
        - address_line1
        - address_country
      anyOf:
        - required:
            - name
        - required:
            - company
      properties:
        description:
          $ref: '#/components/schemas/resource_description'
        name:
          type: string
          description: >
            Either `name` or `company` is required, you may also add both. Must
            be no longer than 40 characters. If both `name` and `company` are
            provided, they will be printed on two separate lines above the rest
            of the address.
          maxLength: 40
          nullable: true
        company:
          type: string
          description: >
            Either `name` or `company` is required, you may also add both. Must
            be no longer than 40 characters. If both `name` and `company` are
            provided, they will be printed on two separate lines above the rest
            of the address. This field can be used for any secondary recipient
            information which is not part of the actual mailing address (Company
            Name, Department, Attention Line, etc).
          maxLength: 40
          nullable: true
        phone:
          type: string
          description: Must be no longer than 40 characters.
          maxLength: 40
          nullable: true
        email:
          type: string
          description: Must be no longer than 100 characters.
          maxLength: 100
          nullable: true
        address_line1:
          type: string
          description: >
            Must be no longer than 64 characters for US addresses or 200
            characters for international addresses.
          maxLength: 200
        address_line2:
          type: string
          description: >
            Must be no longer than 64 characters for US addresses or 200
            characters for international addresses.
          maxLength: 200
          nullable: true
        address_city:
          type: string
          description: >
            Required if address_country is US, otherwise optional. Must be no
            longer than 200 characters.
          maxLength: 200
          nullable: true
        address_state:
          type: string
          description: >
            Required as a 2 letter state short-name code if `address_country` is
            `US`, otherwise optional and no longer than 200 characters.
          maxLength: 200
          nullable: true
        address_zip:
          type: string
          description: >
            Required and must follow the ZIP format of `12345` or ZIP+4 format
            of `12345-1234` if `address_country` is `US`, otherwise optional and
            not any longer than 40 characters.
          maxLength: 40
          nullable: true
        address_country:
          type: string
          description: >
            Must be a 2 letter country short-name code (ISO 3166). Defaults to
            `US`.
          minLength: 2
        send_date:
          $ref: '#/components/schemas/send_date'
        metadata:
          $ref: '#/components/schemas/metadata'
      example:
        name: Harry Zhang
        phone: '5555555555'
        email: harry@lob.com
        address_line1: 210 King St
        address_city: San Francisco
        address_state: CA
        address_zip: '94107'
        address_country: US
    address_editable:
      oneOf:
        - $ref: '#/components/schemas/address_editable_us'
        - $ref: '#/components/schemas/address_editable_intl'
    deleted:
      type: boolean
      description: Only returned if the address has been successfully deleted.
      readOnly: true
      example: false
    date_created:
      type: string
      format: date-time
      description: A timestamp in ISO 8601 format of the date the address was created.
      readOnly: true
      example: '2017-09-05T17:47:53.767Z'
    date_modified:
      type: string
      format: date-time
      description: >-
        A timestamp in ISO 8601 format of the date the address was last
        modified.
      readOnly: true
      example: '2017-09-05T17:47:53.767Z'
    object:
      type: string
      description: Value is `address`.
      readOnly: true
      example: address
    address:
      allOf:
        - $ref: '#/components/schemas/address_editable'
        - type: object
          required:
            - id
            - date_created
            - date_modified
            - object
          properties:
            id:
              $ref: '#/components/schemas/adr_id'
            recipient_moved:
              type: boolean
              description: >
                Only returned for accounts on certain <a
                href="https://dashboard.lob.com/#/settings/editions">Print &amp;
                Mail Editions</a>. Value is `true` if the address was altered
                because the recipient filed for a <a href="#ncoa">National
                Change of Address (NCOA)</a>, `false` if the NCOA check was run
                but no altered address was found, and `null` if the NCOA check
                was not run. The NCOA check does not happen for non-US
                addresses, for non-deliverable US addresses, or for addresses
                created before the NCOA feature was added to your account.
              nullable: true
              readOnly: true
            deleted:
              $ref: '#/components/schemas/deleted'
            date_created:
              $ref: '#/components/schemas/date_created'
            date_modified:
              $ref: '#/components/schemas/date_modified'
            object:
              $ref: '#/components/schemas/object'
    list:
      type: object
      description: Multiple items returned in order
      properties:
        object:
          type: string
          description: What kind of resource does this list contain?
          example: address
        next_url:
          type: string
          description: Url of next page of items in list.
          nullable: true
          example: >-
            https://api.lob.com/v1/addresses?limit=2&after=eyJkYXRlT2Zmc2V0IjoiMjAxOS0wOC0wN1QyMTo1OTo0Ni43NjRaIiwiaWRPZmZzZXQiOiJhZHJfODMwYmYwZWFiZGFhYTQwOSJ9
        previous_url:
          type: string
          description: Url of previous page of items in list.
          nullable: true
          example: null
        count:
          type: integer
          description: number of items in list
          example: 2
    ltr_id:
      type: string
      description: Unique identifier prefixed with `ltr_`.
      pattern: '^ltr_[a-zA-Z0-9]+$'
    required_name_company:
      type: array
      oneOf:
        - required:
            - name
        - required:
            - company
    inline_address_us:
      allOf:
        - $ref: '#/components/schemas/address_editable_us'
        - $ref: '#/components/schemas/required_name_company'
        - type: object
          required:
            - address_line1
            - address_city
            - address_state
            - address_zip
    required_address_fields:
      type: array
      oneOf:
        - required:
            - address_city
            - address_state
        - required:
            - address_zip
    name:
      type: string
      description: |
        The name of the mailpiece recipient.
      example: HARRY ZHANG
    company:
      type: string
      description: |
        The company with which the mailpiece recipient is associated.
      example: LOB.COM
    primary_line:
      type: string
      description: |
        The primary delivery line (usually the street address) of the address.
        Combination of the following applicable `components`:
        * `primary_number`
        * `street_predirection`
        * `street_name`
        * `street_suffix`
        * `street_postdirection`
        * `secondary_designator`
        * `secondary_number`
        * `pmb_designator`
        * `pmb_number`
      example: 185 BERRY ST
    secondary_line:
      type: string
      description: >
        The secondary delivery line of the address. This field is typically
        empty but may contain information if `primary_line` is too long.
      example: STE 6100
    city:
      type: string
      description: >
        The name of the city. `city` and `state` are required if no zip_code is
        passed.
      example: SAN FRANCISCO
    state:
      type: string
      description: >
        The state as a two-letter abbreviation. `city` and `state` are required
        if no zip_code is passed.
      maxLength: 2
      example: CA
    zip_code:
      type: string
      description: >
        The 5-digit ZIP code. Required if `city` and `state` are not passed in.
        If included, must be formatted as a US ZIP or ZIP+4 (e.g. `2268`,
        `94107`, `941072282`, `94107-2282`).
      example: '94107'
    country:
      type: string
      description: |
        2-letter country code or full name of country (required if non-US)
      example: CA
    inline_address_intl:
      type: object
      required:
        - address_line1
        - address_country
        - name
      allOf:
        - $ref: '#/components/schemas/required_address_fields'
        - $ref: '#/components/schemas/required_name_company'
      properties:
        name:
          $ref: '#/components/schemas/name'
        company:
          $ref: '#/components/schemas/company'
        address_line1:
          $ref: '#/components/schemas/primary_line'
        address_line2:
          $ref: '#/components/schemas/secondary_line'
        address_city:
          $ref: '#/components/schemas/city'
        address_state:
          $ref: '#/components/schemas/state'
        address_zip:
          $ref: '#/components/schemas/zip_code'
        address_country:
          $ref: '#/components/schemas/country'
    inline_address:
      oneOf:
        - $ref: '#/components/schemas/inline_address_us'
        - $ref: '#/components/schemas/inline_address_intl'
    mail_type:
      type: string
      enum:
        - usps_first_class
        - usps_standard
      description: >
        A string designating the mail postage type:

        * `usps_first_class` - (default)

        * `usps_standard` - a [cheaper
        option](https://lob.com/pricing/print-mail#compare) which is less
        predictable and takes longer to deliver. Cannot be used with certified
        letters, registered letters, or any letters sent outside of the United
        States.
      default: usps_first_class
    merge_variables:
      type: object
      description: >-
        You can input a merge variable payload object to your template to render
        dynamic content. For example, if you have a template like:
        `{{variable_name}}`, pass in `{"variable_name": "Harry"}` to render
        `Harry`. `merge_variables` must be an object. Any type of value is
        accepted as long as the object is valid JSON; you can use `strings`,
        `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of
        the object is 25,000 characters. If you call `JSON.stringify` on your
        object, it can be no longer than 25,000 characters. Your variable names
        cannot contain any whitespace or any of the following special
        characters: `!`, `"`, `#`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`,
        `;`, `<`, `=`, `>`, `@`, `[`, `\`, `]`, `^`, ```, `{`, `|`, `}`, `~`.
        More instructions can be found in [our guide to using html and merge
        variables](https://lob.com/resources/guides/general/using-html-and-merge-variables).
        Depending on your [Merge Variable
        strictness](https://dashboard.lob.com/#/settings/account) setting, if
        you define variables in your HTML but do not pass them here, you will
        either receive an error or the variable will render as an empty string.
      maxLength: 25000
      nullable: true
    letter_base:
      type: object
      required:
        - to
        - from
        - color
      properties:
        description:
          $ref: '#/components/schemas/resource_description'
        to:
          description: >-
            Must either be an address ID or an inline object with correct
            address parameters. If an object is used, an address will be
            created, corrected, and standardized for free whenever possible
            using our US Address Verification engine (if it is a US address),
            and returned back with an ID. Depending on your [Print & Mail
            Edition](https://dashboard.lob.com/#/settings/editions), US
            addresses may also be run through [National Change of Address
            (NCOA)](https://lob.com/docs#ncoa). Non-US addresses will be
            standardized into uppercase only. If a US address used does not meet
            your account’s [US Mail strictness
            setting](https://dashboard.lob.com/#/settings/account), the request
            will fail. Read more here.
          oneOf:
            - $ref: '#/components/schemas/adr_id'
            - $ref: '#/components/schemas/inline_address'
        from:
          description: >-
            Must either be an address ID or an inline object with correct
            address parameters. Must be a US address unless using a
            `custom_envelope`. All addresses will be standardized into uppercase
            without being modified by verification.
          oneOf:
            - $ref: '#/components/schemas/adr_id'
            - $ref: '#/components/schemas/inline_address'
        send_date:
          $ref: '#/components/schemas/send_date'
        color:
          type: boolean
          description: >-
            Set this key to `true` if you would like to print in color. Set to
            `false` if you would like to print in black and white.
        double_sided:
          type: boolean
          description: >-
            Set this attribute to `true` for double sided printing, or `false`
            for for single sided printing. Defaults to `true`.
          default: true
        address_placement:
          type: string
          enum:
            - top_first_page
            - insert_blank_page
          description: >
            Specifies the location of the address information that will show
            through the double-window envelope. To see how this will impact your
            letter design, view our letter template.
              * top_first_page - (default) print address information at the top of your provided first page
              * insert_blank_page - insert a blank address page at the beginning of your file (you will be charged for the extra page)
          default: top_first_page
        return_envelope:
          type: boolean
          description: >-
            To include a return envelope with your letter, set to `true` and
            specify the `perforated_page`. See
            [pricing](https://www.lob.com/pricing/print-mail#compare) for extra
            costs incurred.
          default: false
        perforated_page:
          type: integer
          description: >-
            Required if `return_envelope` is `true`. The number of the page that
            should be perforated for use with the return envelope. Must be
            greater than or equal to `1`. The blank page added by
            `address_placement=insert_blank_page` will be ignored when
            considering the perforated page number. To see how perforation will
            impact your letter design, view our [perforation
            guide](https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_perf_template.pdf).
          nullable: true
        extra_service:
          type: string
          enum:
            - certified
            - certified_return_receipt
            - registered
          description: >
            Add an extra service to your letter. See
            [pricing](https://www.lob.com/pricing/print-mail#compare) for extra
            costs incurred.
              * certified - track and confirm delivery for domestic destinations. An extra sheet (1 PDF page single-sided or 2 PDF pages double-sided) is added to the beginning of your letter for address and barcode information. See here for templates: [#10 envelope](https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_certified_template.pdf) and [flat envelope](https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_certified_flat_template.pdf) (used for letters over 6 pages single-sided or 12 pages double-sided). You will not be charged for this extra sheet.
              * certified_return_receipt - request an electronic copy of the recipient's signature to prove delivery of your certified letter
              * registered - provides tracking and confirmation for international addresses
          nullable: true
        mail_type:
          $ref: '#/components/schemas/mail_type'
        merge_variables:
          $ref: '#/components/schemas/merge_variables'
        metadata:
          $ref: '#/components/schemas/metadata'
    tmpl_id:
      type: string
      description: Unique identifier prefixed with `tmpl_`.
      pattern: '^tmpl_[a-zA-Z0-9]+$'
    vrsn_id:
      type: string
      description: Unique identifier prefixed with `vrsn_`.
      pattern: '^vrsn_[a-zA-Z0-9]+$'
    letter:
      allOf:
        - $ref: '#/components/schemas/letter_base'
        - type: object
          required:
            - id
            - date_created
            - date_modified
            - object
          properties:
            id:
              $ref: '#/components/schemas/ltr_id'
            custom_envelope:
              type: object
              description: >-
                Accepts an envelope ID for any customized envelope with
                available inventory. If no inventory is available for the
                specified ID, the letter will not be sent, and an error will be
                returned. If the letter has more than 6 sheets, it will be sent
                in a blank flat envelope. Custom envelopes may be created and
                ordered from the dashboard. This feature is exclusive to certain
                customers. Upgrade to the appropriate Print & Mail Edition to
                gain access.
              required:
                - id
                - url
                - object
              properties:
                id:
                  type: string
                  description: The unique identifier of the custom envelope used.
                  maxLength: 40
                url:
                  type: string
                  description: The url of the envelope asset used.
                object:
                  $ref: '#/components/schemas/object'
              nullable: true
            template_id:
              $ref: '#/components/schemas/tmpl_id'
            carrier:
              type: string
              description: Value is `USPS`.
              pattern: ^USPS$
            tracking_number:
              type: string
              description: >-
                The tracking number for a `certified` or
                `certified_return_receipt` letter will be here immediately upon
                creation. The tracking number for a `registered` letter will
                appear here when it becomes available. Letters without
                `extra_service` do not have tracking numbers.

                In test mode, dummy tracking numbers are created for `certified`
                and `certified_return_receipt` letters, but not for `registered`
                letters.
              nullable: true
            tracking_events:
              type: array
            template_version_id:
              $ref: '#/components/schemas/vrsn_id'
            deleted:
              $ref: '#/components/schemas/deleted'
            date_created:
              $ref: '#/components/schemas/date_created'
            date_modified:
              $ref: '#/components/schemas/date_modified'
            object:
              $ref: '#/components/schemas/object'
    letter_editable:
      allOf:
        - $ref: '#/components/schemas/letter_base'
        - type: object
          required:
            - file
          properties:
            file:
              description: >-
                Accepts an HTML string of under 10,000 characters, the ID of a
                saved HTML template, or a remote URL or a local upload of an
                HTML or PDF file. Remote URLs have a 20 MB file size limit and
                must be downloaded within 40 seconds. HTML files passed as
                remote URLs or local file upload have no character limit. HTML
                merge variables should not include delimiting whitespace. All
                pages of a supplied PDF file must be sized at 8.5"x11", while
                supplied HTML will be rendered and trimmed to as many 8.5"x11"
                pages as necessary. For design specifications, please see our
                [PDF](https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_template.pdf)
                and [HTML](https://docs.lob.com/#html-examples) templates. If a
                `custom_envelope` is used, follow [this
                template](https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_custom_envelope.pdf).
                For domestic destinations, the file limit is 60 pages
                single-sided or 120 pages double-sided. For international
                destinations, the file limit is 6 pages single-sided or 12 pages
                double-sided. PDFs that surpass the file limit will error, while
                HTML that renders more pages than the file limit will be
                trimmed. See
                [pricing](https://lob.com/pricing/print-mail#compare) for extra
                costs incurred. Any letters over 6 pages single-sided or 12
                pages double-sided will be placed in a [flat
                envelope](https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_flat_template.pdf)
                instead of the standard double window envelope.
              oneOf:
                - type: string
                  maxLength: 10000
                - $ref: '#/components/schemas/tmpl_id'
            custom_envelope:
              type: string
              description: >-
                Accepts an envelope ID for any customized envelope with
                available inventory. If no inventory is available for the
                specified ID, the letter will not be sent, and an error will be
                returned. If the letter has more than 6 sheets, it will be sent
                in a blank flat envelope. Custom envelopes are a premium feature
                which may be created and ordered from the dashboard. Upgrade to
                the appropriate [Print & Mail
                Edition](https://lob.com/pricing/print-mail#compare) to gain
                access.
    template_html:
      type: string
      description: >
        An HTML string of less than 100,000 characters to be used as the
        `published_version` of this template. For details, see our Guide to
        designing HTML templates. Please see endpoint specific documentation for
        any other product-specific HTML details.  Merge variables should not
        include delimiting whitespace.  If there is a syntax error with your
        variable names within your HTML, then an error will be thrown, e.g.
        using a `{{#users}}` opening tag without the corresponding closing tag
        `{{/users}}`.
      maxLength: 100000
    template_version_writable:
      type: object
      required:
        - html
      properties:
        description:
          $ref: '#/components/schemas/resource_description'
        html:
          $ref: '#/components/schemas/template_html'
    template_version:
      allOf:
        - $ref: '#/components/schemas/template_version_writable'
        - type: object
          required:
            - id
            - date_created
            - date_modified
            - object
          properties:
            id:
              $ref: '#/components/schemas/vrsn_id'
            suggest_json_editor:
              type: boolean
              description: |
                Used by frontend, true if the template uses advanced features.
            engine:
              type: string
              description: |
                The engine used to combine html template with merge variables.
                  * legacy - Lob's original engine
                  * handlebars
              enum:
                - legacy
                - handlebars
              nullable: true
            date_created:
              $ref: '#/components/schemas/date_created'
            date_modified:
              $ref: '#/components/schemas/date_modified'
            deleted:
              $ref: '#/components/schemas/deleted'
            object:
              $ref: '#/components/schemas/object'
    template_version_updatable:
      type: object
      properties:
        description:
          $ref: '#/components/schemas/resource_description'
    template:
      type: object
      required:
        - id
        - versions
        - published_version
        - date_created
        - date_modified
        - object
      properties:
        id:
          $ref: '#/components/schemas/tmpl_id'
        versions:
          type: array
          description: >-
            An array of all non-deleted version objects associated with the
            template.
          items:
            $ref: '#/components/schemas/template_version'
        published_version:
          $ref: '#/components/schemas/template_version'
        date_created:
          $ref: '#/components/schemas/date_created'
        date_modified:
          $ref: '#/components/schemas/date_modified'
        deleted:
          $ref: '#/components/schemas/deleted'
        object:
          $ref: '#/components/schemas/object'
    template_update:
      type: object
      properties:
        description:
          $ref: '#/components/schemas/resource_description'
        published_version:
          $ref: '#/components/schemas/vrsn_id'
    template_writable:
      type: object
      required:
        - html
      properties:
        description:
          $ref: '#/components/schemas/resource_description'
        html:
          $ref: '#/components/schemas/template_html'
        metadata:
          $ref: '#/components/schemas/metadata'
    recipient:
      type: string
      description: |
        The intended recipient, typically a person's or firm's name.
      example: LOB.COM
    urbanization:
      type: string
      description: >
        Only present for addresses in Puerto Rico. An urbanization refers to an
        area, sector, or development within a city. See [USPS
        documentation](https://pe.usps.com/text/pub28/28api_008.htm#:~:text=I51.,-4%20Urbanizations&text=In%20Puerto%20Rico%2C%20identical%20street,placed%20before%20the%20urbanization%20name.)
        for clarification.
    multiple_components:
      type: object
      required:
        - primary_line
      oneOf:
        - required:
            - city
            - state
        - required:
            - zip_code
      properties:
        recipient:
          $ref: '#/components/schemas/recipient'
        primary_line:
          $ref: '#/components/schemas/primary_line'
        secondary_line:
          $ref: '#/components/schemas/secondary_line'
        urbanization:
          $ref: '#/components/schemas/urbanization'
        city:
          $ref: '#/components/schemas/city'
        state:
          $ref: '#/components/schemas/state'
        zip_code:
          $ref: '#/components/schemas/zip_code'
        object:
          $ref: '#/components/schemas/object'
    single_line_address:
      type: object
      required:
        - address
      properties:
        address:
          type: string
          description: >
            The entire address in one string. Does not support a recipient and
            will error when other payload parameters are provided.
          example: 185 Berry Street 94107
        object:
          $ref: '#/components/schemas/object'
    zip_code_type:
      type: string
      enum:
        - standard
        - po_box
        - unique
        - military
        - ''
      description: >
        A description of the ZIP code type.

        * `standard` – The default ZIP code type. Used when none of the other
        types apply.

        * `po_box` – The ZIP code contains only PO Boxes.

        * `unique` – The ZIP code is uniquely assigned to a single organization
        (such as a government agency) that receives a large volume of mail.

        * `military` – The ZIP code contains military addresses.

        * `''` – A match could not be made with the provided inputs.
      readOnly: true
      example: standard
    county:
      type: string
      description: |
        County name of the address city.
      example: SAN FRANCISCO
    county_fips:
      type: string
      description: >
        A 5-digit [FIPS county
        code](https://en.wikipedia.org/wiki/FIPS_county_code) which uniquely
        identifies `components[county]`. It consists of a 2-digit state code and
        a 3-digit county code.
      maxLength: 5
      minLength: 5
      example: '06075'
      readOnly: true
    components:
      type: object
      required:
        - primary_number
        - street_predirection
        - street_name
        - street_suffix
        - street_postdirection
        - secondary_designator
        - secondary_number
        - pmb_designator
        - pmb_number
        - extra_secondary_designator
        - extra_secondary_number
        - city
        - state
        - zip_code
        - zip_code_plus_4
        - zip_code_type
        - delivery_point_barcode
        - address_type
        - record_type
        - default_building_address
        - county
        - county_fips
        - carrier_route
        - carrier_route_type
        - latitude
        - longitude
      properties:
        primary_number:
          type: string
          description: >
            The numeric or alphanumeric part of an address preceding the street
            name. Often the house, building, or PO Box number.
          example: '185'
          readOnly: true
        street_predirection:
          type: string
          enum:
            - 'N'
            - S
            - E
            - W
            - NE
            - SW
            - SE
            - NW
            - ''
          description: >
            Geographic direction preceding a street name (`N`, `S`, `E`, `W`,
            `NE`, `SW`, `SE`, `NW`).
          example: 'N'
          readOnly: true
        street_name:
          type: string
          description: |
            The name of the street.
          example: BERRY
          readOnly: true
        street_suffix:
          type: string
          description: >
            The standard USPS abbreviation for the street suffix (`ST`, `AVE`,
            `BLVD`, etc).
          example: ST
          readOnly: true
        street_postdirection:
          type: string
          enum:
            - 'N'
            - S
            - E
            - W
            - NE
            - SW
            - SE
            - NW
            - ''
          description: >
            Geographic direction following a street name (`N`, `S`, `E`, `W`,
            `NE`, `SW`, `SE`, `NW`).
          example: 'N'
          readOnly: true
        secondary_designator:
          type: string
          description: >
            The standard USPS abbreviation describing the
            `components[secondary_number]` (`STE`, `APT`, `BLDG`, etc).
          example: STE
          readOnly: true
        secondary_number:
          type: string
          description: |
            Number of the apartment/unit/etc.
          example: '6100'
          readOnly: true
        pmb_designator:
          type: string
          description: >
            Designator of a
            [CMRA-authorized](https://en.wikipedia.org/wiki/Commercial_mail_receiving_agency)
            private mailbox.
          example: ''
          readOnly: true
        pmb_number:
          type: string
          description: >
            Number of a
            [CMRA-authorized](https://en.wikipedia.org/wiki/Commercial_mail_receiving_agency)
            private mailbox.
          example: ''
          readOnly: true
        extra_secondary_designator:
          type: string
          description: >
            An extra (often unnecessary) secondary designator provided with the
            input address.
          example: ''
          readOnly: true
        extra_secondary_number:
          type: string
          description: >
            An extra (often unnecessary) secondary number provided with the
            input address.
          example: ''
          readOnly: true
        city:
          $ref: '#/components/schemas/city'
        state:
          $ref: '#/components/schemas/state'
        zip_code:
          $ref: '#/components/schemas/zip_code'
        zip_code_plus_4:
          type: string
          description: |
            The 4-digit ZIP add-on code.
          example: '1728'
          readOnly: true
        zip_code_type:
          $ref: '#/components/schemas/zip_code_type'
        delivery_point_barcode:
          type: string
          description: >
            A 12-digit identifier that uniquely identifies a delivery point
            (location where mail can be sent and received). It consists of the
            5-digit ZIP code (`zip_code`), 4-digit ZIP+4 add-on
            (`zip_code_plus_4`), 2-digit delivery point, and 1-digit delivery
            point check digit.
          example: '941071728506'
          readOnly: true
        address_type:
          type: string
          enum:
            - residential
            - commercial
            - ''
          description: >
            Uses USPS's Residential Delivery Indicator (RDI) to identify whether
            an address is classified as residential or

            business. Possible values are:

            * `residential` –– The address is residential or a PO Box.

            * `commercial` –– The address is commercial.

            * `''` –– Not enough information provided to be determined.
          example: commercial
          readOnly: true
        record_type:
          type: string
          enum:
            - street
            - highrise
            - firm
            - po_box
            - rural_route
            - general_delivery
            - ''
          description: >
            A description of the type of address. Populated if a DPV match is
            made (`deliverability_analysis[dpv_confirmation]`

            is `Y`, `S`, or `D`). For more detailed information about each
            record type, see [the
            appendix](https://docs.lob.com/#us_verification_details).

            Will be one of:

            * `street`

            * `highrise`

            * `firm`

            * `po_box`

            * `rural_route`

            * `general_delivery`

            * `''`
          example: highrise
          readOnly: true
        default_building_address:
          type: boolean
          description: >
            Designates whether or not the address is the default address for a
            building containing multiple delivery points.
          example: false
          readOnly: true
        county:
          $ref: '#/components/schemas/county'
        county_fips:
          $ref: '#/components/schemas/county_fips'
        carrier_route:
          type: string
          description: >
            A 4-character code assigned to a mail delivery route within a ZIP
            code.
          example: C001
          readOnly: true
        carrier_route_type:
          type: string
          enum:
            - city_delivery
            - rural_route
            - highway_contract
            - po_box
            - general_delivery
          description: >
            The type of `components[carrier_route]`. For more detailed
            information about each carrier route type, see [the
            appendix](https://docs.lob.com/#us_verification_details). Possible
            values are:

            * `city_delivery` –– City delivery (starts with "C").

            * `rural_route` –– Rural route (starts with "R").

            * `highway_contract` –– Highway contract route (starts with "H")

            * `po_box` –– P.O. Box route (starts with "B").

            * `general_delivery` –– General delivery (starts with "G").
          example: city_delivery
          readOnly: true
        latitude:
          type: string
          description: >
            A positive or negative decimal indicating the geographic latitude of
            the address, specifying the north-to-south position of a location.
            This should be used with `longitude` to pinpoint locations on a map.
            Will not be returned for undeliverable addresses or military
            addresses (state is `AA`, `AE`, or `AP`).
          example: '37.77597542841264'
          readOnly: true
        longitude:
          type: string
          description: >
            A positive or negative decimal indicating the geographic longitude
            of the address, specifying the north-to-south position of a
            location. This should be used with `latitude` to pinpoint locations
            on a map. Will not be returned for undeliverable addresses or
            military addresses (state is `AA`, `AE`, or `AP`).
          example: '-122.3929557343685'
          readOnly: true
        object:
          $ref: '#/components/schemas/object'
    dpv_footnote:
      type: string
      enum:
        - AA
        - A1
        - BB
        - CC
        - N1
        - F1
        - G1
        - U1
        - M1
        - M3
        - P1
        - P3
        - R1
        - R7
        - RR
      readOnly: true
      example: AA
    deliverability_analysis:
      type: object
      required:
        - dpv_confirmation
        - dpv_cmra
        - dpv_vacant
        - dpv_active
        - dpv_footnotes
        - ews_match
        - lacs_indicator
        - lacs_return_code
        - suite_return_code
      properties:
        dpv_confirmation:
          type: string
          enum:
            - 'Y'
            - S
            - D
            - 'N'
            - ''
          description: >
            Result of Delivery Point Validation (DPV), which determines whether
            or not the address is deliverable by the USPS. Possible values are:

            * `Y` –– The address is deliverable by the USPS.

            * `S` –– The address is deliverable by removing the provided
            secondary unit designator. This information may be incorrect or
            unnecessary.

            * `D` –– The address is deliverable to the building's default
            address but is missing a secondary unit designator and/or number.
                                There is a chance the mail will not reach the intended recipient.
            * `N` –– The address is not deliverable according to the USPS, but
            parts of the address are valid (such as the street and ZIP code).

            * `''` –– This address is not deliverable. No matching street could
            be found within the city or ZIP code.
          example: 'Y'
          readOnly: true
        dpv_cmra:
          type: string
          enum:
            - 'Y'
            - 'N'
            - ''
          description: >
            Indicates whether or not the address is
            [CMRA-authorized](https://en.wikipedia.org/wiki/Commercial_mail_receiving_agency).
            Possible values are:

            * `Y` –– Address is CMRA-authorized.

            * `N` –– Address is not CMRA-authorized.

            * `''` –– A DPV match is not made
            (`deliverability_analysis[dpv_confirmation]` is `N` or an empty
            string).
          example: 'N'
          readOnly: true
        dpv_vacant:
          type: string
          enum:
            - 'Y'
            - 'N'
            - ''
          description: >
            Indicates that an address was once deliverable, but has become
            vacant and is no longer receiving deliveries. Possible values are:

            * `Y` –– Address is vacant.

            * `N` –– Address is not vacant.

            * `''` –– A DPV match is not made
            (`deliverability_analysis[dpv_confirmation]` is `N` or an empty
            string).
          example: 'N'
          readOnly: true
        dpv_active:
          type: string
          enum:
            - 'Y'
            - 'N'
            - ''
          description: >
            Corresponds to the USPS field `dpv_no_stat`. Indicates that an
            address has been vacated in the recent past, and is no longer
            receiving deliveries. If it's been unoccupied for 90+ days, or
            temporarily vacant, this will be flagged. Possible values are: * `Y`
            –– Address is active. * `N` –– Address is not active. * `''` –– A
            DPV match is not made (`deliverability_analysis[dpv_confirmation]`
            is `N` or an empty string).
          example: 'Y'
          readOnly: true
        dpv_footnotes:
          type: array
          description: >
            An array of 2-character strings that gives more insight into how
            `deliverability_analysis[dpv_confirmation]` was determined. Will
            always include at least 1 string, and can include up to 3.
          items:
            $ref: '#/components/schemas/dpv_footnote'
          example:
            - AA
            - BB
          readOnly: true
        ews_match:
          type: boolean
          description: >
            Indicates whether or not an address has been flagged in the [Early
            Warning
            System](https://docs.informatica.com/data-engineering/data-engineering-quality/10-4-0/address-validator-port-reference/postal-carrier-certification-data-ports/early-warning-system-return-code.html),
            meaning the address is under development and not yet ready to
            receive mail. However, it should become available in a few months.
          example: false
          readOnly: true
        lacs_indicator:
          type: string
          enum:
            - 'Y'
            - 'N'
            - ''
          description: >
            Indicates whether this address has been converted by
            [LACSLink](https://postalpro.usps.com/address-quality/lacslink).
            Possible values are:

            * `Y` –– New address produced with a matching record in LACSLink.

            * `N` –– New address could not be produced with a matching record in
            LACSLink.

            * `''` –– A DPV match is not made
            (`deliverability_analysis[dpv_confirmation]` is `N` or an empty
            string).
          example: ''
          readOnly: true
        lacs_return_code:
          type: string
          description: |
            Any return code associated with the LACSLink form of this address.
          example: ''
          readOnly: true
        suite_return_code:
          type: string
          enum:
            - A
            - '00'
            - ''
          description: >
            Any return code associated with the
            [SuiteLink](https://postalpro.usps.com/address-quality-solutions/suitelink)
            form of this address. Possible values are:

            * `A` –– A SuiteLink match was found and secondary information was
            added.

            * `00` –– A SuiteLink match could not be found and no secondary
            information was added.

            * `''` –– SuiteLink lookup was not attempted.
          example: ''
          readOnly: true
        object:
          $ref: '#/components/schemas/object'
    lob_confidence_score:
      type: object
      required:
        - score
        - level
      properties:
        score:
          type: number
          format: float
          description: >
            A numerical score between 0 and 100 that represents the percentage
            of mailpieces Lob has sent to this addresses that have been
            delivered successfully. Will be `null` if no tracking data exists
            for this address.
          example: 100
          default: null
          readOnly: true
        level:
          type: string
          description: |
            The level of confidence in the score associated with this address.
          example: high
          readOnly: true
        object:
          $ref: '#/components/schemas/object'
    zip5:
      type: object
      required:
        - zip_code
      properties:
        zip_code:
          type: string
          description: A 5-digit ZIP code.
          pattern: '^\d{5}$'
          example: '94107'
    zip_id:
      type: string
      description: Unique identifier prefixed with `us_zip_`.
      readOnly: true
      pattern: '^us_zip_[a-zA-Z0-9]+$'
      example: us_zip_c7cb63d68f8d6
    city-2:
      type: object
      required:
        - city
        - state
        - county
        - county_fips
        - preferred
      properties:
        city:
          $ref: '#/components/schemas/city'
          readOnly: true
        state:
          $ref: '#/components/schemas/state'
          readOnly: true
        county:
          $ref: '#/components/schemas/county'
          readOnly: true
        county_fips:
          $ref: '#/components/schemas/county_fips'
        preferred:
          type: boolean
          description: >
            Indicates whether or not the city is the [USPS default
            city](https://en.wikipedia.org/wiki/ZIP_Code#ZIP_Codes_and_previous_zoning_lines)
            (preferred city) of a ZIP code. There is only one preferred city per
            ZIP code, which will always be in position 0 in the array of cities.
          maxLength: 1
          minLength: 1
          example: true
          readOnly: true
        object:
          $ref: '#/components/schemas/object'
    zip:
      allOf:
        - $ref: '#/components/schemas/zip5'
        - type: object
          required:
            - id
            - cities
            - zip_code_type
            - object
          properties:
            id:
              $ref: '#/components/schemas/zip_id'
            cities:
              type: array
              items:
                $ref: '#/components/schemas/city-2'
              description: >
                An array of city objects containing valid cities for the
                `zip_code`. Multiple cities will be returned if more than one
                city is associated with the input ZIP code.
              readOnly: true
            zip_code_type:
              $ref: '#/components/schemas/zip_code_type'
              readOnly: true
            object:
              $ref: '#/components/schemas/object'
  responses:
    error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    address:
      description: Returns an address object if a valid identifier was provided.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/address'
    deleted:
      description: Returns true if the delete was successful
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/adr_id'
              deleted:
                $ref: '#/components/schemas/deleted'
    all_addresses:
      description: >-
        A dictionary with a data property that contains an array of up to
        `limit` addresses. Each entry in the array is a separate address object.
        The previous and next page of address entries can be retrieved by
        calling the endpoint contained in the `previous_url` and `next_url`
        fields in the API response respectively.<br>If no more addresses are
        available beyond the current set of returned results, the `next_url`
        field will be empty.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  data:
                    type: array
                    description: list of addresses
                    items:
                      $ref: '#/components/schemas/address'
              - $ref: '#/components/schemas/list'
          example:
            data:
              - id: adr_e68217bd744d65c8
                description: Harry - Office
                name: HARRY ZHANG
                company: LOB
                phone: '5555555555'
                email: harry@lob.com
                address_line1: 185 BERRY ST STE 6100
                address_line2: null
                address_city: SAN FRANCISCO
                address_state: CA
                address_zip: 94107-1741
                address_country: UNITED STATES
                metadata: {}
                date_created: '2019-08-12T00:16:00.361Z'
                date_modified: '2019-08-12T00:16:00.361Z'
                object: address
              - id: adr_830bf0eabdaaa409
                description: Harry - Office
                name: HARRY ZHANG
                company: LOB
                phone: '5555555555'
                email: harry@lob.com
                address_line1: 185 BERRY ST STE 6100
                address_line2: null
                address_city: SAN FRANCISCO
                address_state: CA
                address_zip: 94107-1741
                address_country: UNITED STATES
                metadata: {}
                date_created: '2019-08-07T21:59:46.764Z'
                date_modified: '2019-08-07T21:59:46.764Z'
                object: address
            object: list
            next_url: >-
              https://api.lob.com/v1/addresses?limit=2&after=eyJkYXRlT2Zmc2V0IjoiMjAxOS0wOC0wN1QyMTo1OTo0Ni43NjRaIiwiaWRPZmZzZXQiOiJhZHJfODMwYmYwZWFiZGFhYTQwOSJ9
            previous_url: null
            count: 2
    address_writable:
      description: Echos the writable fields of a newly created address object.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/address_editable'
          example:
            id: adr_d3489cd64c791ab5
            description: Harry - Office
            name: HARRY ZHANG
            company: LOB
            phone: '5555555555'
            email: harry@lob.com
            address_line1: 185 BERRY ST STE 6100
            address_city: SAN FRANCISCO
            address_state: CA
            address_zip: '94107'
            address_country: UNITED STATES
            metadata: {}
            date_created: '2017-09-05T17:47:53.767Z'
            date_modified: '2017-09-05T17:47:53.767Z'
            object: address
    letter:
      description: Returns a letter object
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/letter'
          example:
            id: ltr_c94e83ca2cd5121
            to: adr_c94e83ca2cd5121
            from: adr_c94e83ca2cd5121
            color: false
            file: html_b1234567asfsd
            description: ''
            metadata: {}
            date_created: '2017-11-07T22:56:10.962Z'
            date_modified: '2017-11-07T22:56:10.962Z'
            object: letter
    all_letters:
      description: >-
        A dictionary with a data property that contains an array of up to
        `limit` letters. Each entry in the array is a separate letter. The
        previous and next page of letters can be retrieved by calling the
        endpoint contained in the `previous_url` and `next_url` fields in the
        API response respectively.<br>If no more letters are available beyond
        the current set of returned results, the `next_url` field will be empty.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  data:
                    type: array
                    description: list of letters
                    items:
                      $ref: '#/components/schemas/letter'
              - $ref: '#/components/schemas/list'
          example:
            data:
              - id: ltr_d5a5a89da9106f8
                description: Test letter
                to: adr_s34534535411123
                from: adr_s34534535411123
                color: false
                file: <HTML>hi</HTML>
                metadata: {}
                date_created: '2019-07-27T23:49:01.511Z'
                date_modified: '2019-07-27T23:49:01.511Z'
                object: letter
              - id: ltr_59b2150ae120887
                description: Test letter
                to: adr_s34534535411123
                from: adr_s34534535411123
                color: true
                file: <HTML>hi</HTML>
                metadata: {}
                date_created: '2019-03-29T10:22:34.642Z'
                date_modified: '2019-03-29T10:22:34.642Z'
                object: letter
            object: list
            next_url: null
            count: 2
    template_version:
      description: Returns the template version with the given template and version ids.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/template_version'
          example:
            id: vrsn_534e339882d2282
            description: Second Version
            html: '<html>Second HTML for {{name}}</html>'
            date_created: '2017-11-09T04:49:38.016Z'
            date_modified: '2017-11-09T04:49:38.016Z'
            object: version
    all_template_versions:
      description: >-
        A dictionary with a data property that contains an array of up to
        `limit` template versions. Each entry in the array is a separate
        template version object. The previous and next page of template versions
        can be retrieved by calling the endpoint contained in the `previous_url`
        and `next_url` fields in the API response respectively.<br>If no more
        template versions are available beyond the current set of returned
        results, the `next_url` field will be empty.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  data:
                    type: array
                    description: list of template versions
                    items:
                      $ref: '#/components/schemas/template_version'
              - $ref: '#/components/schemas/list'
          example:
            data:
              - id: vrsn_4d6ff5d868bf630
                description: Second Version
                html: 'Second HTML for '
                date_created: '2017-11-09T05:09:03.665Z'
                date_modified: '2018-05-22T22:01:10.479Z'
                object: version
              - id: vrsn_2a17159c1911919
                description: Test Template
                html: 'HTML for '
                date_created: '2017-11-09T05:08:40.004Z'
                date_modified: '2018-05-22T22:01:11.309Z'
                object: version
            object: list
            count: 2
    template:
      description: Returns a template object
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/template'
          example:
            id: tmpl_c94e83ca2cd5121
            description: Test Template
            versions:
              - id: vrsn_362184d96d9b0c9
                description: Test Template
                html: '<html>HTML for {{name}}</html>'
                date_created: '2017-11-07T22:56:10.962Z'
                date_modified: '2017-11-07T22:56:10.962Z'
                object: version
            published_version:
              id: vrsn_362184d96d9b0c9
              description: Test Template
              html: '<html>HTML for {{name}}</html>'
              date_created: '2017-11-07T22:56:10.962Z'
              date_modified: '2017-11-07T22:56:10.962Z'
              object: version
            metadata: {}
            date_created: '2017-11-07T22:56:10.962Z'
            date_modified: '2017-11-07T22:56:10.962Z'
            object: template
    all_templates:
      description: >-
        A dictionary with a data property that contains an array of up to
        `limit` templates. Each entry in the array is a separate template. The
        previous and next page of templates can be retrieved by calling the
        endpoint contained in the `previous_url` and `next_url` fields in the
        API response respectively.<br>If no more templates are available beyond
        the current set of returned results, the `next_url` field will be empty.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  data:
                    type: array
                    description: list of templates
                    items:
                      $ref: '#/components/schemas/template'
              - $ref: '#/components/schemas/list'
          example:
            data:
              - id: tmpl_d5a5a89da9106f8
                description: Test Template
                versions:
                  - id: vrsn_232a02fb8224791
                    description: Test Template
                    html: 'HTML for '
                    date_created: '2019-07-27T23:49:01.512Z'
                    date_modified: '2019-07-27T23:49:01.512Z'
                    object: version
                published_version:
                  id: vrsn_232a02fb8224791
                  description: Test Template
                  html: 'HTML for '
                  date_created: '2019-07-27T23:49:01.512Z'
                  date_modified: '2019-07-27T23:49:01.512Z'
                  object: version
                metadata: {}
                date_created: '2019-07-27T23:49:01.511Z'
                date_modified: '2019-07-27T23:49:01.511Z'
                object: template
              - id: tmpl_59b2150ae120887
                description: Test Template
                versions:
                  - id: vrsn_2a7eb63ccb795b9
                    description: Test Template
                    html: 'HTML for '
                    date_created: '2019-03-29T10:22:34.643Z'
                    date_modified: '2019-03-29T10:22:34.643Z'
                    object: version
                published_version:
                  id: vrsn_2a7eb63ccb795b9
                  description: Test Template
                  html: 'HTML for '
                  date_created: '2019-03-29T10:22:34.643Z'
                  date_modified: '2019-03-29T10:22:34.643Z'
                  object: version
                metadata: {}
                date_created: '2019-03-29T10:22:34.642Z'
                date_modified: '2019-03-29T10:22:34.642Z'
                object: template
            object: list
            next_url: >-
              https://api.lob.com/v1/templates?limit=2&after=eyJkYXRlT2Zmc2V0IjoiMjAxOS0wMy0yOVQxMDoyMjozNC42NDJaIiwiaWRPZmZzZXQiOiJ0bXBsXzU5YjIxNTBhZTEyMDg4NyJ9
            count: 2
    us_verifications:
      description: Returns a US verification object.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            type: object
            properties:
              recipient:
                $ref: '#/components/schemas/recipient'
              primary_line:
                $ref: '#/components/schemas/primary_line'
              secondary_line:
                $ref: '#/components/schemas/secondary_line'
              urbanization:
                $ref: '#/components/schemas/urbanization'
              last_line:
                type: string
                description: |
                  Combination of the following applicable `components`:
                  * `city`
                  * `state`
                  * `zip_code`
                  * `zip_code_plus_4`
                example: SAN FRANCISCO CA 94107
              deliverability:
                type: string
                enum:
                  - deliverable
                  - deliverable_unnecessary_unit
                  - deliverable_incorrect_unit
                  - deliverable_missing_unit
                  - undeliverable
                description: >
                  Summarizes the deliverability of the `us_verification` object.

                  For full details, see the `deliverability_analysis` field.
                  Possible values are:

                  * `deliverable` – The address is deliverable by the USPS.

                  * `deliverable_unnecessary_unit` – The address is deliverable,
                  but the secondary unit information is unnecessary.

                  * `deliverable_incorrect_unit` – The address is deliverable to
                  the building's default address but the secondary unit provided
                  may not exist. There is a chance the mail will not reach the
                  intended recipient.

                  * `deliverable_missing_unit` – The address is deliverable to
                  the building's default address but is missing secondary unit
                  information. There is a chance the mail will not reach the
                  intended recipient.

                  * `undeliverable` – The address is not deliverable according
                  to the USPS.
                example: deliverable
              components:
                $ref: '#/components/schemas/components'
              deliverability_analysis:
                $ref: '#/components/schemas/deliverability_analysis'
              lob_confidence_score:
                $ref: '#/components/schemas/lob_confidence_score'
              object:
                $ref: '#/components/schemas/object'
    zip_lookups:
      description: Returns a zip lookup object if a valid zip was provided.
      headers:
        ratelimit-limit:
          $ref: '#/components/headers/ratelimit-limit'
        ratelimit-remaining:
          $ref: '#/components/headers/ratelimit-remaining'
        ratelimit-reset:
          $ref: '#/components/headers/ratelimit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/zip'
  headers:
    ratelimit-limit:
      description: The rate limit for a given endpoint.
      schema:
        type: integer
        example: 150
    ratelimit-remaining:
      description: The number of requests remaining in the current window.
      schema:
        type: integer
        example: 100
    ratelimit-reset:
      description: >
        The time at which the rate limit window resets in  <a
        href="https://en.wikipedia.org/wiki/Unix_time">UTC epoch seconds</a>
      schema:
        type: integer
        example: 1528749846
  parameters:
    limit:
      in: query
      name: Limit
      required: false
      description: How many results to return.
      schema:
        type: integer
        minimum: 1
        default: 10
        maximum: 100
        example: 10
    idempotency:
      in: header
      name: Idempotency-Key
      required: false
      description: >
        A string of no longer than 256 characters that uniquely identifies this
        resource. For more help integrating idempotency keys, refer to our
        [implementation guide](https://www.lob.com/guides#idempotent_request).
      schema:
        type: string
        maxLength: 256
        example: 026e7634-24d7-486c-a0bb-4a17fd0eebc5
    after:
      in: query
      name: after
      description: >
        A reference to a list entry used for paginating to the previous set of
        entries. This field is pre-populated in the `previous_url` field in the
        return response.
      schema:
        type: string
    before:
      in: query
      name: before
      description: >
        A reference to a list entry used for paginating to the next set of
        entries. This field is pre-populated in the `next_url` field in the
        return response.
      schema:
        type: string
    include:
      in: query
      name: include
      description: >
        Request that the response include the total count by specifying
        `include[]=total_count`.
      schema:
        type: object
      style: deepObject
      explode: true
    date_created:
      in: query
      name: date_created
      description: >
        Filter by ISO-8601 date or datetime, e.g. `{ gt: '2012-01-01', lt:
        '2012-01-31T12:34:56Z' }` where `gt` is ›, `lt` is ‹, `gte` is ≥, and
        `lte` is ≤.
      schema:
        type: string
        format: date-time
    metadata:
      in: query
      name: metadata
      description: 'Filter by metadata key-value pair, e.g. `metadata[customer_id]=987654`.'
      schema:
        $ref: '#/components/schemas/metadata'
      style: deepObject
      explode: true
security:
  - basicAuth: []
paths:
  '/addresses/{adr_id}':
    parameters:
      - in: path
        name: adr_id
        description: id of the address
        required: true
        schema:
          $ref: '#/components/schemas/adr_id'
    get:
      operationId: get_address
      summary: Retrieve address with given id
      description: >-
        Retrieves the details of an existing address. You need only supply the
        unique customer identifier that was returned upon address creation.
      tags:
        - Addresses
      responses:
        '200':
          $ref: '#/components/responses/address'
        default:
          $ref: '#/components/responses/error'
    delete:
      operationId: delete_address
      summary: Deletes address with given id
      description: >-
        Deletes the details of an existing address. You need only supply the
        unique customer identifier that was returned upon address creation.
      tags:
        - Addresses
      responses:
        '200':
          $ref: '#/components/responses/deleted'
        default:
          $ref: '#/components/responses/error'
  /addresses:
    get:
      operationId: list_addresses
      summary: List all addresses
      description: >-
        Returns a list of your addresses. The addresses are returned sorted by
        creation date, with the most recently created addresses appearing first.
      tags:
        - Addresses
      parameters:
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/all_addresses'
        default:
          $ref: '#/components/responses/error'
    post:
      operationId: create_address
      summary: Creates a new address object
      description: Creates a new address given information
      tags:
        - Addresses
      parameters:
        - $ref: '#/components/parameters/idempotency'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/address_editable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/address_editable'
            encoding:
              metadata:
                style: deepObject
                explode: true
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/address_editable'
      responses:
        '200':
          $ref: '#/components/responses/address_writable'
        default:
          $ref: '#/components/responses/error'
  '/letters/{ltr_id}':
    parameters:
      - in: path
        name: ltr_id
        description: id of the letter
        required: true
        schema:
          $ref: '#/components/schemas/ltr_id'
    get:
      operationId: get_letter
      summary: Retrieve letter with given id
      description: >-
        Retrieves the details of an existing letter. You need only supply the
        unique letter identifier that was returned upon letter creation.
      tags:
        - Letters
      responses:
        '200':
          $ref: '#/components/responses/letter'
        default:
          $ref: '#/components/responses/error'
    delete:
      operationId: cancel_letter
      summary: Cancel a letter
      description: >-
        Completely removes a letter from production. This can only be done if
        the letter has a `send_date` and the `send_date` has not yet passed. If
        the letter is successfully canceled, you will not be charged for it.
        Read more on [cancellation windows](https://docs.lob.com/#cancellation)
        and [scheduling](https://docs.lob.com/#scheduled). Scheduling and
        cancellation is a premium feature. Upgrade to the appropriate Print &
        Mail Edition to gain access.
      tags:
        - Letters
      responses:
        '200':
          $ref: '#/components/responses/deleted'
        default:
          $ref: '#/components/responses/error'
  /letters:
    get:
      operationId: list_letters
      summary: List all letters
      description: >-
        Returns a list of your letters. The letters are returned sorted by
        creation date, with the most recently created letters appearing first.
      tags:
        - Letters
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/after'
        - $ref: '#/components/parameters/before'
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/date_created'
        - $ref: '#/components/parameters/metadata'
      responses:
        '200':
          $ref: '#/components/responses/all_letters'
        default:
          $ref: '#/components/responses/error'
    post:
      operationId: create_letter
      summary: Creates a new letter object
      description: Creates a new letter given information
      tags:
        - Letters
      parameters:
        - $ref: '#/components/parameters/idempotency'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/letter_editable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/letter_editable'
            encoding:
              to:
                style: deepObject
                explode: true
              from:
                style: deepObject
                explode: true
              merge_variables:
                style: deepObject
                explode: true
              metadata:
                style: deepObject
                explode: true
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/letter_editable'
            encoding:
              to:
                style: deepObject
                explode: true
              from:
                style: deepObject
                explode: true
              merge_variables:
                style: deepObject
                explode: true
              metadata:
                style: deepObject
                explode: true
      responses:
        '200':
          $ref: '#/components/responses/letter'
        default:
          $ref: '#/components/responses/error'
  '/templates/{tmpl_id}/versions/{vrsn_id}':
    parameters:
      - in: path
        name: tmpl_id
        description: id of the template
        required: true
        schema:
          $ref: '#/components/schemas/tmpl_id'
      - in: path
        name: vrsn_id
        description: id of the template_version
        required: true
        schema:
          $ref: '#/components/schemas/vrsn_id'
    get:
      operationId: get_template_version
      summary: Retrieve template version with given template and version ids.
      description: Retrieves the template version with the given template and version ids.
      tags:
        - Template_Versions
      responses:
        '200':
          $ref: '#/components/responses/template_version'
        default:
          $ref: '#/components/responses/error'
    post:
      operationId: update_template_version
      summary: Updates the template version with given template and version ids.
      description: Retrieves the template version with the given template and version ids.
      tags:
        - Template_Versions
      parameters:
        - $ref: '#/components/parameters/idempotency'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/template_version_updatable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/template_version_updatable'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/template_version_updatable'
      responses:
        '200':
          $ref: '#/components/responses/template_version'
        default:
          $ref: '#/components/responses/error'
    delete:
      operationId: delete_template_version
      summary: >-
        Deletes the template version with given template and version ids if
        possible.
      description: >-
        Permanently deletes a template version. A template's `published_version`
        can not be deleted.
      tags:
        - Template_Versions
      responses:
        '200':
          $ref: '#/components/responses/deleted'
        default:
          $ref: '#/components/responses/error'
  '/templates/{tmpl_id}/versions':
    parameters:
      - in: path
        name: tmpl_id
        description: id of the template
        required: true
        schema:
          $ref: '#/components/schemas/tmpl_id'
    get:
      operationId: list_template_versions
      summary: List all template_versions
      description: >
        Returns a list of template versions for the passed `template_id`. The
        template versions are sorted by creation date, with the most recently
        created appearing first.
      tags:
        - Template_Versions
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/after'
        - $ref: '#/components/parameters/before'
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/date_created'
      responses:
        '200':
          $ref: '#/components/responses/all_template_versions'
        default:
          $ref: '#/components/responses/error'
    post:
      operationId: create_template_version
      summary: Creates a new template_version object
      description: Creates a new template version attached to the specified template.
      tags:
        - Template_Versions
      parameters:
        - $ref: '#/components/parameters/idempotency'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/template_version_writable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/template_version_writable'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/template_version_writable'
      responses:
        '200':
          $ref: '#/components/responses/template_version'
        default:
          $ref: '#/components/responses/error'
  '/templates/{tmpl_id}':
    parameters:
      - in: path
        name: tmpl_id
        description: id of the template
        required: true
        schema:
          $ref: '#/components/schemas/tmpl_id'
    get:
      operationId: get_template
      summary: Retrieve template with given id
      description: >-
        Retrieves the details of an existing template. You need only supply the
        unique template identifier that was returned upon template creation.
      tags:
        - Templates
      responses:
        '200':
          $ref: '#/components/responses/template'
        default:
          $ref: '#/components/responses/error'
    post:
      operationId: update_template
      summary: Update description and/or published version of a template.
      description: >-
        Updates the description and/or published version of the template with
        the given id. To update the template's html, create a new version of the
        template.
      tags:
        - Templates
      parameters:
        - $ref: '#/components/parameters/idempotency'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/template_update'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/template_update'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/template_update'
      responses:
        '200':
          $ref: '#/components/responses/template'
        default:
          $ref: '#/components/responses/error'
    delete:
      operationId: delete_template
      summary: Deletes template with given id
      description: >-
        Deletes the details of an existing template. You need only supply the
        unique customer identifier that was returned upon template creation.
      tags:
        - Templates
      responses:
        '200':
          $ref: '#/components/responses/deleted'
        default:
          $ref: '#/components/responses/error'
  /templates:
    get:
      operationId: list_templates
      summary: List all templates
      description: >-
        Returns a list of your templates. The templates are returned sorted by
        creation date, with the most recently created templates appearing first.
      tags:
        - Templates
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/after'
        - $ref: '#/components/parameters/before'
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/date_created'
        - $ref: '#/components/parameters/metadata'
      responses:
        '200':
          $ref: '#/components/responses/all_templates'
        default:
          $ref: '#/components/responses/error'
    post:
      operationId: create_template
      summary: Creates a new template object
      description: Creates a new template given information
      tags:
        - Templates
      parameters:
        - $ref: '#/components/parameters/idempotency'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/template_writable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/template_writable'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/template_writable'
      responses:
        '200':
          $ref: '#/components/responses/template'
        default:
          $ref: '#/components/responses/error'
  /us_verifications:
    post:
      operationId: verification
      summary: Verify a US or US territory address with a live API key.
      description: >-
        Verify a US or US territory address with a live API key. The address can
        be in components (e.g. `primary_line` is "185 Berry Street", `zip_code`
        is "94107") or as a single string (e.g. "185 Berry Street 94107"), but
        not as both. Requests using a test API key validate required fields but
        return empty values unless specific `primary_line` values are provided.
      tags:
        - US Verifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/multiple_components'
                - $ref: '#/components/schemas/single_line_address'
          application/x-www-form-urlencoded:
            schema:
              oneOf:
                - $ref: '#/components/schemas/multiple_components'
                - $ref: '#/components/schemas/single_line_address'
          multipart/form-data:
            schema:
              oneOf:
                - $ref: '#/components/schemas/multiple_components'
                - $ref: '#/components/schemas/single_line_address'
      responses:
        '200':
          $ref: '#/components/responses/us_verifications'
        default:
          $ref: '#/components/responses/error'
  /us_zip_lookups:
    post:
      operationId: zip_lookup
      summary: Looks up information pertaining to a given ZIP code
      description: Returns information about a ZIP code
      tags:
        - Zip Lookups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zip5'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/zip5'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/zip5'
      responses:
        '200':
          $ref: '#/components/responses/zip_lookups'
        default:
          $ref: '#/components/responses/error'
