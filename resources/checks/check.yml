parameters:
  - in: path
    name: chk_id
    description: id of the check
    required: true
    schema:
      $ref: "attributes/chk_id.yml"

get:
  operationId: check_retrieve

  summary: Retrieve

  description: >-
    Retrieves the details of an existing check. You need only supply
    the unique check identifier that was returned upon check creation.

  tags:
    - Checks

  responses:
    "200":
      description: Returns a check object
      content:
        $ref: responses/check.yml

    default:
      $ref: "../../shared/responses/mailpiece_error.yml"

  x-codeSamples:
    - lang: Shell
      source: |
        curl https://api.lob.com/v1/checks/chk_534f10783683daa0 \
          -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:
      label: CURL
    - lang: Typescript
      source: |
        try {
          const check = await new ChecksApi(config).get('chk_xxxx');
        } catch (err: any) {
          console.error(err);
        }
      label: TYPESCRIPT
    - lang: Javascript
      source: |
        Lob.checks.retrieve('chk_534f10783683daa0', function (err, res) {
          console.log(err, res);
        });
      label: NODE
    - lang: Ruby
      source: |
        checkApi = ChecksApi.new(config)

        begin
          retrievedCheck = checkApi.get("chk_534f10783683daa0")
        rescue => err
          p err.message
        end
      label: RUBY
    - lang: Python
      source: |
        with ApiClient(configuration) as api_client:
          api = ChecksApi(api_client)

        try:
          check = api.get("chk_534f10783683daa0")
        except ApiException as e:
          print(e)
      label: PYTHON
    - lang: PHP
      source: |
        $apiInstance = new OpenAPI\Client\Api\ChecksApi($config, new GuzzleHttp\Client());

        try {
            $result = $apiInstance->get("chk_534f10783683daa0");
        } catch (Exception $e) {
            echo $e->getMessage(), PHP_EOL;
        }
    - lang: Java
      source: |
        ChecksApi apiInstance = new ChecksApi(config);

        try {
          Check response = apiInstance.get("chk_534f10783683daa0");
        } catch (ApiException e) {
          e.printStackTrace();
        }
      label: JAVA
    - lang: Elixir
      source: |
        Lob.Check.find("chk_534f10783683daa0")
      label: ELIXIR
    - lang: CSharp
      source: |
        ChecksApi api = new ChecksApi(config);

        try {
          Check response = api.get("chk_534f10783683daa0");
        } catch (ApiException e) {
          Console.WriteLine(e.ToString());
        }
      label: CSHARP

# For Form Factors, delete is actually cancel. If you need
# delete verbiage, check Bank Accounts or Template Versions.
delete:
  operationId: check_cancel

  summary: Cancel

  description: >-
    Completely removes a check from production. This can only be done if
    the check has a `send_date` and the `send_date` has not yet passed.
    If the check is successfully canceled, you will not be charged for it.
    Read more on [cancellation windows](#section/Cancellation-Windows)
    and [scheduling](#section/Scheduled-Mailings). Scheduling and
    cancellation is a premium feature. Upgrade to the appropriate
    <a href="https://dashboard.lob.com/#/settings/editions" target="_blank">Print & Mail Edition</a>
    to gain access.

  tags:
    - Checks

  responses:
    "200":
      $ref: ../../shared/responses/check_canceled.yml

    default:
      $ref: "../../shared/responses/mailpiece_error.yml"

  x-codeSamples:
    - lang: Shell
      source: |
        curl -X DELETE https://api.lob.com/v1/checks/chk_534f10783683daa0 \
          -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:
      label: CURL
    - lang: Typescript
      source: |
        try {
          const deleteCheck = await new ChecksApi(config).delete('chk_xxxx');
        } catch (err: any) {
          console.error(err);
        }
      label: TYPESCRIPT
    - lang: Javascript
      source: |
        Lob.checks.delete('chk_534f10783683daa0', function (err, res) {
          console.log(err, res);
        });
      label: NODE
    - lang: Ruby
      source: |
        checkApi = ChecksApi.new(config)

        begin
          deletedCheck = checkApi.cancel("chk_534f10783683daa0")
        rescue => err
          p err.message
        end
      label: RUBY
    - lang: Python
      source: |
        with ApiClient(configuration) as api_client:
          api = ChecksApi(api_client)

        try:
          deleted_resource = api.cancel("chk_534f10783683daa0")
        except ApiException as e:
          print(e)
      label: PYTHON
    - lang: PHP
      source: |
        $apiInstance = new OpenAPI\Client\Api\ChecksApi($config, new GuzzleHttp\Client());

        try {
            $result = $apiInstance->cancel("chk_534f10783683daa0");
        } catch (Exception $e) {
            echo $e->getMessage(), PHP_EOL;
        }
    - lang: Java
      source: |
        ChecksApi apiInstance = new ChecksApi(config);

        try {
            CheckDeletion response = apiInstance.cancel("chk_534f10783683daa0");
        } catch (ApiException e) {
            e.printStackTrace();
        }
      label: JAVA
    - lang: Elixir
      source: |
        Lob.Check.destroy("chk_534f10783683daa0")
      label: ELIXIR
    - lang: CSharp
      source: |
        ChecksApi api = new ChecksApi(config);

        try {
          CheckDeletion response = api.cancel("chk_534f10783683daa0");
        } catch (ApiException e) {
          Console.WriteLine(e.ToString());
        }
      label: CSHARP
