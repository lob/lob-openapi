parameters:
  - in: path
    name: crv_id
    description: id of the creative
    required: true
    schema:
      $ref: "attributes/crv_id.yml"

get:
  operationId: creative_retrieve

  summary: Retrieve

  description: >-
    Retrieves the details of an existing creative. You need only supply
    the unique creative identifier that was returned upon creative creation.

  tags:
    - Creatives

  responses:
    "200":
      description: Returns a creative object
      content:
        $ref: "responses/creative.yml"

    default:
      $ref: "responses/creatives_error.yml"

  x-codeSamples:
    - lang: Shell
      source: |
        curl https://api.lob.com/v1/creatives/crv_2a3b096c409b32c \
          -u <YOUR API KEY>:
      label: CURL
    - lang: Ruby
      source: |
        creativeApi = CreativesApi.new(config)

        begin
          retrievedCreative = creativeApi.get("crv_2a3b096c409b32c")
        rescue => err
          p err.message
        end
      label: RUBY

patch:
  operationId: creative_update

  summary: Update

  description: >-
    Update the details of an existing creative. You need only supply
    the unique identifier that was returned upon creative creation.

  tags:
    - Creatives

  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "models/creative_base.yml"
        example:
          # TODO: fill out example
          description: Test creative

      application/x-www-form-urlencoded:
        schema:
          $ref: "models/creative_base.yml"
        example:
          # TODO: fill out example
          description: Test creative

      multipart/form-data:
        schema:
          $ref: "models/creative_base.yml"
        example:
          # TODO: fill out example
          description: Test creative

  responses:
    "200":
      description: Returns a creative object
      content:
        $ref: "responses/creative.yml"

    default:
      $ref: "responses/creatives_error.yml"

  x-codeSamples:
    - lang: Shell
      source: |
        curl -X PATCH https://api.lob.com/v1/creatives/crv_2a3b096c409b32c \
          -u <YOUR API KEY>: \
          -d "description=Our updated 4x6 postcard creative"
      label: CURL
    - lang: Python
      source: |
        creative_patch = CreativePatch(
          description = "Our updated 4x6 postcard creative",
        )

        with ApiClient(configuration) as api_client:
          api = CreativesApi(api_client)

        try:
          updated_creative = api.update("crv_2a3b096c409b32c", creative_patch)
        except ApiException as e:
          print(e)
      label: PYTHON
    - lang: Ruby
      source: |
        creativePatch = CreativePatch.new({
          description: "Our updated 4x6 postcard creative",
        })

        creativeApi = CreativesApi.new(config)

        begin
          updatedCreative = creativeApi.update("crv_2a3b096c409b32c", creativePatch)
        rescue => err
          p err.message
        end
      label: RUBY
