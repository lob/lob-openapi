allOf:
  - $ref: "intl_verification_base.yml"

  - type: object

    properties:
      id:
        $ref: "../attributes/intl_ver_id.yml"

      last_line:
        type: string
        description: |
          Combination of the following applicable `components`:
          * `city`
          * `state`
          * `zip_code`
          * `zip_code_plus_4`

      country:
        type: string
        description: >-
          The country of the address. Will be returned as a 2 letter country short-name code (ISO 3166).

      coverage:
        type: string
        enum:
          - SUBBUILDING
          - HOUSENUMBER/BUILDING
          - STREET
          - LOCALITY
          - SPARSE
        description: |
          * SUBBUILDING - Coverage down to unit numbers. For example, in an apartment or a large building
          * HOUSENUMBER/BUILDING - Coverage down to house number. For example, the address where a house or building may be located
          * STREET - Coverage down to street. This means that we can verify that an street exists in a city, state, country
          * LOCALITY - Coverage down to city, state, or village or province. This means that we can verify that a city, village, province, or state exists in a country. Countries differ in how they define what is a province, state, city, village, etc. This attempts to group eveyrthing together.
          * SPARSE - Some addresses for this country exist in our databases

      deliverability:
        type: string
        enum:
          - deliverable
          - deliverable_missing_info
          - undeliverable
          - no_match
        description: |
          Summarizes the deliverability of the `intl_verification` object. Possible values are:
          * deliverable — The address is deliverable.
          * deliverable_missing_info — The address is missing some information, but is most likely deliverable.
          * undeliverable — The address is most likely not deliverable. Some components of the address (such as city or postal code) may have been found.
          * no_match — This address is not deliverable. No matching street could be found within the city or postal code.
      status:
        type: string
        enum:
          - LV4
          - LV3
          - LV2
          - LV1
          - LF4
          - LF3
          - LF2
          - LF1
          - LM4
          - LM3
          - LM2
          - LU1
        description: |
          * LV4 - Verified. The input data is correct. All input data was able to match in databases.
          * LV3 - Verified. The input data is correct. All input data was able to match in databases <em>after</em> some or all elements were standarized. The input data may also be using outdated city, state, or country names.
          * LV2 - Verified. The input data is correct although some input data is unverifiable due to incomplete data.
          * LV1 - Verified. The input data is acceptable but in an attempt to standarize user input, errors were introduced.
          * LF4 - Fixed. The input data is matched and fixed. (Example: Brighon, UK -> Brighton, UK)
          * LF3 - Fixed. The input data is matched and fixed but some elements such as Subbuilding number and house number cannot be checked.
          * LF2 - Fixed. The input data is matched but some elements such as Street cannot be checked.
          * LF1 - Fixed. The input data is acceptable but in an attempt to standarize user input, errors were introduced.
          * LM4 - Missing Info. The input data cannot be corrected completely.
          * LM3 - Missing Info. The input data cannot be corrected completely and there were multiple matches found in databases.
          * LM2 - Missing Info. The input data cannot be corrected completely and only some elements were found.
          * LU1 - Unverfied. The input data cannot be corrected or matched.

      components:
        $ref: "intl_components.yml"

      object:
        allOf:
          - $ref: "../../../shared/attributes/object.yml"
          - type: string
            enum:
              - intl_verification
            default: intl_verification
