post:
  operationId: zip_lookup

  summary: Lookups

  description: >-
    Returns information about a ZIP code

  tags:
    - Zip Lookups

  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../../shared/models/zip5.yml"
        example:
          zip_code: "94107"

      application/x-www-form-urlencoded:
        schema:
          $ref: "../../shared/models/zip5.yml"
        example:
          zip_code: "94107"

      multipart/form-data:
        schema:
          $ref: "../../shared/models/zip5.yml"
        example:
          zip_code: "94107"

  responses:
    "200":
      $ref: responses/zip_lookups.yml

    default:
      $ref: responses/zip_lookups_error.yml

  x-codeSamples:
    - lang: Shell
      source: |
        curl https://api.lob.com/v1/us_zip_lookups \
          -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \
          -d "zip_code=94107"
      label: CURL
    - lang: Typescript
      source: |
        const ZipLookup = new ZipLookupsApi(av_config);
        const zipRequest : ZipEditable = {
          zip_code: '07090'
        }
        try {
          const zipLookup : Zip = await ZipLookup.lookup(zipRequest);
        } catch (err: any) {
          console.error(err);
        }
      label: TYPESCRIPT
    - lang: Javascript
      source: |
        Lob.usZipLookups.lookup({
          zip_code: '94107'
        }, function (err, res) {
          console.log(err, res);
        });
      label: NODE
    - lang: Ruby
      source: |
        zipLookupsApi = ZipLookupsApi.new(config)

        zipRequest = ZipEditable.new({
          zip_code: "94107"
        })

        begin
          zipLookup = zipLookupsApi.lookup(zipRequest)
        rescue => err
          p err.message
        end
      label: RUBY
    - lang: Python
      source: |
        with ApiClient(configuration) as api_client:
          api = ZipLookupsApi(api_client)

        zip_request = ZipEditable(
          zip_code = "94107"
        )

        try:
          zip_lookup = api.lookup(zip_request)
        except ApiException as e:
          print(e)
      label: PYTHON
    - lang: PHP
      source: |
        $apiInstance = new OpenAPI\Client\Api\ZipLookupsApi($config, new GuzzleHttp\Client());

        $zipRequest = new OpenAPI\Client\Model\ZipEditable(array(
            "zip_code"  =>  '94107'
        ));

        try {
            $result = $apiInstance->lookup($zipRequest);
        } catch (Exception $e) {
            echo $e->getMessage(), PHP_EOL;
        }
      label: PHP
    - lang: Java
      source: |
        ZipEditable zipEditable = new ZipEditable();
        zipEditable.setZipCode("94107");

        ZipLookupsApi apiInstance = new ZipLookupsApi(config);
        try {
          Zip response = apiInstance.lookup(zipEditable);
        } catch (ApiException e) {
          e.printStackTrace();
        }
      label: JAVA
    - lang: Elixir
      source: |
        Lob.USZipLookup.lookup(%{
          zip_code: "94107"
        })
      label: ELIXIR
    - lang: CSharp
      source: |
        ZipEditable zipEditable = new ZipEditable("94107");

        ZipLookupsApi api = new ZipLookupsApi(config);

        try {
          Zip response = api.lookup(zipEditable);
        } catch (ApiException e) {
          Console.WriteLine(e.ToString());
        }
      label: CSHARP
    - lang: Go
      source: |
        var context = context.Background()
        context = context.WithValue(context, lob.ContextBasicAuth, lob.BasicAuth{UserName: os.Getenv("<YOUR_API_KEY>")})

        var apiClient = *lob.NewAPIClient(configuration)

        var zipEditable = *lob.NewZipEditable()
        zipEditable.SetZipCode("94107")

        resp, _, err := apiClient.ZipLookupsApi.Lookup(context).ZipEditable(zipEditable).Execute()

        if err != nil {
            return err
        }
      label: GO
